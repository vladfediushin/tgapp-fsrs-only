#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞ FSRS-only
"""
import asyncio
import sys
import os
from pathlib import Path

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ app
sys.path.append(str(Path(__file__).parent / "app"))

async def test_server_startup():
    """–¢–µ—Å—Ç –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞"""
    try:
        # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º main –º–æ–¥—É–ª—å
        from app.main import app
        print("‚úÖ FastAPI –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω–æ")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–æ—É—Ç—ã
        routes = [route.path for route in app.routes]
        print(f"üîç –ù–∞–π–¥–µ–Ω–æ —Ä–æ—É—Ç–æ–≤: {len(routes)}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–ª—é—á–µ–≤—ã–µ —Ä–æ—É—Ç—ã
        expected_routes = [
            "/fsrs/submit-answer",
            "/fsrs/submit-batch",
            "/fsrs/due-questions/{user_id}",
            "/fsrs/stats/{user_id}"
        ]
        
        for route in expected_routes:
            if route not in routes:
                print(f"‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç —Ä–æ—É—Ç: {route}")
                return False
                
        print("‚úÖ –í—Å–µ –∫–ª—é—á–µ–≤—ã–µ —Ä–æ—É—Ç—ã –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É—é—Ç")
        
        print("\nüéâ –°–µ—Ä–≤–µ—Ä –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ —Å FSRS-only —Å–∏—Å—Ç–µ–º–æ–π!")
        return True
        
    except ImportError as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞: {e}")
        return False
    except Exception as e:
        print(f"‚ùå –ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞: {e}")
        return False

if __name__ == "__main__":
    success = asyncio.run(test_server_startup())
    if success:
        print("\n‚úÖ –¢–ï–°–¢ –ó–ê–ü–£–°–ö–ê –ü–†–û–ô–î–ï–ù")
    else:
        print("\n‚ùå –¢–ï–°–¢ –ó–ê–ü–£–°–ö–ê –ù–ï –ü–†–û–ô–î–ï–ù")
        sys.exit(1)
