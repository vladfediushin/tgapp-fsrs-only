# Environment Variables Template for TG App FSRS
# Copy this file to .env and fill in the actual values
# NEVER commit .env files with real secrets to version control

# ============================================================================
# Application Configuration
# ============================================================================

# Environment (development, staging, production)
ENVIRONMENT=production

# Debug mode (true/false) - MUST be false in production
DEBUG=false

# Application version
VERSION=1.0.0

# Deployment information
DEPLOYMENT_VERSION=1.0.0
DEPLOYMENT_TIMESTAMP=
GIT_COMMIT_HASH=

# ============================================================================
# Security Configuration
# ============================================================================

# Secret key for JWT tokens and encryption (CHANGE THIS IN PRODUCTION!)
SECRET_KEY=your-production-secret-key-change-this-immediately

# JWT Algorithm
ALGORITHM=HS256

# Access token expiration (minutes)
ACCESS_TOKEN_EXPIRE_MINUTES=30

# ============================================================================
# Database Configuration
# ============================================================================

# Primary database URL
# Format: postgresql+asyncpg://username:password@host:port/database
DATABASE_URL=postgresql+asyncpg://username:password@host:port/database

# Database connection pool settings
DATABASE_POOL_SIZE=20
DATABASE_MAX_OVERFLOW=30
DATABASE_POOL_TIMEOUT=30
DATABASE_POOL_RECYCLE=3600

# ============================================================================
# Redis Configuration (Optional)
# ============================================================================

# Redis URL for caching and sessions
REDIS_URL=redis://username:password@host:port/0

# Redis connection settings
REDIS_TTL=3600
REDIS_MAX_CONNECTIONS=10

# ============================================================================
# CORS Configuration
# ============================================================================

# Allowed CORS origins (comma-separated)
CORS_ORIGINS=https://your-frontend-domain.com,https://your-app.vercel.app

# ============================================================================
# Performance Configuration
# ============================================================================

# Request timeout (seconds)
REQUEST_TIMEOUT=30

# Maximum request size (bytes)
MAX_REQUEST_SIZE=10485760

# Worker connections
WORKER_CONNECTIONS=1000

# Keep-alive timeout
KEEPALIVE_TIMEOUT=65

# ============================================================================
# Rate Limiting
# ============================================================================

# Enable rate limiting
RATE_LIMIT_ENABLED=true

# Requests per window
RATE_LIMIT_REQUESTS=100

# Rate limit window (seconds)
RATE_LIMIT_WINDOW=60

# ============================================================================
# Logging Configuration
# ============================================================================

# Log level (DEBUG, INFO, WARNING, ERROR, CRITICAL)
LOG_LEVEL=INFO

# Log file path (optional)
LOG_FILE=/var/log/tgapp/app.log

# Log directory
LOG_DIRECTORY=./logs

# ============================================================================
# Monitoring and Observability
# ============================================================================

# Enable Prometheus metrics
ENABLE_PROMETHEUS=true

# Metrics port
METRICS_PORT=9090

# Enable distributed tracing
ENABLE_TRACING=true

# Jaeger endpoint (optional)
JAEGER_ENDPOINT=

# ============================================================================
# Error Tracking
# ============================================================================

# Sentry DSN for error tracking
SENTRY_DSN=https://your-sentry-dsn@sentry.io/project-id

# Sentry environment
SENTRY_ENVIRONMENT=production

# Sentry traces sample rate (0.0 to 1.0)
SENTRY_TRACES_SAMPLE_RATE=0.1

# ============================================================================
# Email Configuration
# ============================================================================

# SMTP server settings
SMTP_SERVER=smtp.gmail.com
SMTP_PORT=587
SMTP_USERNAME=your-email@gmail.com
SMTP_PASSWORD=your-app-password
SMTP_USE_TLS=true

# Email addresses for alerts
ALERT_EMAIL_FROM=alerts@your-domain.com
ALERT_EMAIL_TO=admin@your-domain.com,dev@your-domain.com

# ============================================================================
# External API Keys
# ============================================================================

# Google Analytics
GOOGLE_ANALYTICS_ID=GA-XXXXXXXXX

# Hotjar (optional)
HOTJAR_ID=

# Other analytics services
MIXPANEL_TOKEN=
AMPLITUDE_API_KEY=

# ============================================================================
# Webhook and Alert Configuration
# ============================================================================

# Webhook URL for error notifications
ERROR_WEBHOOK_URL=https://hooks.slack.com/services/YOUR/SLACK/WEBHOOK

# Slack webhook for alerts
ALERT_SLACK_WEBHOOK=https://hooks.slack.com/services/YOUR/SLACK/WEBHOOK
SLACK_WEBHOOK_URL=https://hooks.slack.com/services/YOUR/SLACK/WEBHOOK

# Discord webhook (optional)
DISCORD_WEBHOOK_URL=

# ============================================================================
# Health Check Configuration
# ============================================================================

# Health check interval (seconds)
HEALTH_CHECK_INTERVAL=30

# Health check timeout (seconds)
HEALTH_CHECK_TIMEOUT=5

# ============================================================================
# Backup Configuration
# ============================================================================

# Enable automated backups
BACKUP_ENABLED=true

# Backup interval (hours)
BACKUP_INTERVAL=24

# Backup retention (days)
BACKUP_RETENTION_DAYS=30

# Backup storage path
BACKUP_STORAGE_PATH=/var/backups/tgapp

# ============================================================================
# Cloud Storage Configuration (for backups)
# ============================================================================

# AWS S3 Configuration
AWS_ACCESS_KEY_ID=your-aws-access-key
AWS_SECRET_ACCESS_KEY=your-aws-secret-key
AWS_REGION=us-east-1
S3_BACKUP_BUCKET=your-backup-bucket

# Google Cloud Storage (alternative)
GOOGLE_CLOUD_PROJECT=your-project-id
GOOGLE_CLOUD_BUCKET=your-backup-bucket

# ============================================================================
# Feature Flags
# ============================================================================

# Enable FSRS algorithm
ENABLE_FSRS=true

# Enable offline synchronization
ENABLE_OFFLINE_SYNC=true

# Enable analytics tracking
ENABLE_ANALYTICS=true

# Enable caching
ENABLE_CACHING=true

# Enable metrics collection
ENABLE_METRICS=true

# ============================================================================
# FSRS Configuration
# ============================================================================

# FSRS algorithm parameters (comma-separated)
FSRS_PARAMETERS=0.4,0.6,2.4,5.8,4.93,0.94,0.86,0.01,1.49,0.14,0.94,2.18,0.05,0.34,1.26,0.29,2.61

# FSRS request retention
FSRS_REQUEST_RETENTION=0.9

# FSRS maximum interval (days)
FSRS_MAXIMUM_INTERVAL=36500

# Enable FSRS fuzz factor
FSRS_ENABLE_FUZZ=true

# ============================================================================
# Frontend Configuration
# ============================================================================

# Frontend URLs for health checks and CORS
FRONTEND_URL=https://your-app.vercel.app
BACKEND_URL=https://your-api.onrender.com

# API base URL for frontend
VITE_API_BASE_URL=https://your-api.onrender.com
VITE_API_URL=https://your-api.onrender.com

# Frontend environment
VITE_ENVIRONMENT=production
VITE_APP_VERSION=1.0.0

# Frontend feature flags
VITE_ENABLE_FSRS=true
VITE_ENABLE_OFFLINE_MODE=true
VITE_ENABLE_PWA=true
VITE_ENABLE_SERVICE_WORKER=true

# Frontend monitoring
VITE_ENABLE_PERFORMANCE_MONITORING=true
VITE_ENABLE_ERROR_TRACKING=true
VITE_ENABLE_ANALYTICS=true

# Frontend security
VITE_ENABLE_CSP=true
VITE_ENABLE_HTTPS_ONLY=true

# ============================================================================
# Deployment Platform Configuration
# ============================================================================

# Render.com configuration
RENDER_API_KEY=your-render-api-key
RENDER_SERVICE_ID=your-render-service-id

# Vercel configuration
VERCEL_TOKEN=your-vercel-token
VERCEL_PROJECT_ID=your-vercel-project-id

# Heroku configuration (if using)
HEROKU_API_KEY=your-heroku-api-key
HEROKU_APP_NAME=your-heroku-app-name

# ============================================================================
# Docker Configuration
# ============================================================================

# Docker build arguments
BUILD_DATE=
VCS_REF=

# PostgreSQL Docker configuration
POSTGRES_DB=tgapp_fsrs
POSTGRES_USER=postgres
POSTGRES_PASSWORD=your-postgres-password

# Redis Docker configuration
REDIS_PASSWORD=your-redis-password

# Grafana Docker configuration
GRAFANA_USER=admin
GRAFANA_PASSWORD=your-grafana-password

# ============================================================================
# SSL/TLS Configuration
# ============================================================================

# SSL certificate paths (for Docker/self-hosted)
SSL_CERT_PATH=/etc/ssl/certs/tgapp.crt
SSL_KEY_PATH=/etc/ssl/private/tgapp.key

# Let's Encrypt configuration
LETSENCRYPT_EMAIL=admin@your-domain.com
LETSENCRYPT_DOMAIN=your-domain.com

# ============================================================================
# Development/Testing Configuration
# ============================================================================

# Test database URL (for testing only)
TEST_DATABASE_URL=postgresql+asyncpg://test:test@localhost:5432/test_tgapp

# Enable test mode
TEST_MODE=false

# Skip certain checks in development
SKIP_MIGRATIONS=false
SKIP_HEALTH_CHECKS=false

# ============================================================================
# Security Headers and Policies
# ============================================================================

# Content Security Policy
CSP_DEFAULT_SRC='self'
CSP_SCRIPT_SRC='self' 'unsafe-inline'
CSP_STYLE_SRC='self' 'unsafe-inline'
CSP_IMG_SRC='self' data: https:

# HSTS settings
HSTS_MAX_AGE=31536000
HSTS_INCLUDE_SUBDOMAINS=true

# ============================================================================
# API Rate Limiting by Endpoint
# ============================================================================

# Authentication endpoints
AUTH_RATE_LIMIT=10
AUTH_RATE_WINDOW=300

# FSRS endpoints
FSRS_RATE_LIMIT=100
FSRS_RATE_WINDOW=60

# General API endpoints
API_RATE_LIMIT=1000
API_RATE_WINDOW=3600

# ============================================================================
# Cache Configuration
# ============================================================================

# Cache TTL settings (seconds)
CACHE_DEFAULT_TTL=3600
CACHE_USER_TTL=1800
CACHE_FSRS_TTL=7200
CACHE_STATIC_TTL=86400

# Cache size limits
CACHE_MAX_SIZE=104857600  # 100MB
CACHE_MAX_ENTRIES=10000

# ============================================================================
# Notes and Instructions
# ============================================================================

# IMPORTANT SECURITY NOTES:
# 1. Change all default passwords and secret keys
# 2. Use strong, unique passwords for all services
# 3. Enable 2FA where possible
# 4. Regularly rotate secrets and API keys
# 5. Use environment-specific values for each deployment
# 6. Never commit real secrets to version control
# 7. Use a secrets management service in production
# 8. Regularly audit and update dependencies
# 9. Monitor for security vulnerabilities
# 10. Implement proper backup and disaster recovery

# DEPLOYMENT CHECKLIST:
# □ All secrets changed from defaults
# □ Database credentials secured
# □ CORS origins configured correctly
# □ SSL/TLS certificates configured
# □ Monitoring and alerting set up
# □ Backup strategy implemented
# □ Error tracking configured
# □ Performance monitoring enabled
# □ Health checks working
# □ Security headers configured